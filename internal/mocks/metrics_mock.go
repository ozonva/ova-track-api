// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonva/ova-track-api/internal/api (interfaces: Metrics)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetrics is a mock of Metrics interface.
type MockMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMockRecorder
}

// MockMetricsMockRecorder is the mock recorder for MockMetrics.
type MockMetricsMockRecorder struct {
	mock *MockMetrics
}

// NewMockMetrics creates a new mock instance.
func NewMockMetrics(ctrl *gomock.Controller) *MockMetrics {
	mock := &MockMetrics{ctrl: ctrl}
	mock.recorder = &MockMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetrics) EXPECT() *MockMetricsMockRecorder {
	return m.recorder
}

// IncGetTrackCounter mocks base method.
func (m *MockMetrics) IncGetTrackCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncGetTrackCounter")
}

// IncGetTrackCounter indicates an expected call of IncGetTrackCounter.
func (mr *MockMetricsMockRecorder) IncGetTrackCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncGetTrackCounter", reflect.TypeOf((*MockMetrics)(nil).IncGetTrackCounter))
}

// IncSuccessCreateTrackCounter mocks base method.
func (m *MockMetrics) IncSuccessCreateTrackCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncSuccessCreateTrackCounter")
}

// IncSuccessCreateTrackCounter indicates an expected call of IncSuccessCreateTrackCounter.
func (mr *MockMetricsMockRecorder) IncSuccessCreateTrackCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncSuccessCreateTrackCounter", reflect.TypeOf((*MockMetrics)(nil).IncSuccessCreateTrackCounter))
}

// IncSuccessRemoveTrackCounter mocks base method.
func (m *MockMetrics) IncSuccessRemoveTrackCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncSuccessRemoveTrackCounter")
}

// IncSuccessRemoveTrackCounter indicates an expected call of IncSuccessRemoveTrackCounter.
func (mr *MockMetricsMockRecorder) IncSuccessRemoveTrackCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncSuccessRemoveTrackCounter", reflect.TypeOf((*MockMetrics)(nil).IncSuccessRemoveTrackCounter))
}

// IncSuccessUpdateTrackCounter mocks base method.
func (m *MockMetrics) IncSuccessUpdateTrackCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncSuccessUpdateTrackCounter")
}

// IncSuccessUpdateTrackCounter indicates an expected call of IncSuccessUpdateTrackCounter.
func (mr *MockMetricsMockRecorder) IncSuccessUpdateTrackCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncSuccessUpdateTrackCounter", reflect.TypeOf((*MockMetrics)(nil).IncSuccessUpdateTrackCounter))
}
