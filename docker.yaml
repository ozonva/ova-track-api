version: '3.1'

services:
  db:
    container_name: db
    restart: always
    image: postgres:13
    volumes:
      - ./.docker/db/pgdata:/pgdata
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: "admin"
      POSTGRES_USER: "admin"
      POSTGRES_DB: "db"
      PGDATA: /pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 5000:8080
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  jaeger:
    image: 'jaegertracing/all-in-one:latest'
    ports:
      - '6831:6831/udp'
      - '16686:16686'
  app:
    build: .
    restart: unless-stopped
    depends_on:
      - db
      - kafka
      - jaeger
    links:
      - db
      - kafka
    ports:
      - "8080:8080"